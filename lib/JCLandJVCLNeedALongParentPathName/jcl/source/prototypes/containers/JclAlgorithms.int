(*$JPPDEFINEMACRO APPLYINT(PROCNAME, ITRINTERFACENAME, CALLBACKTYPE)
procedure PROCNAME(const First: ITRINTERFACENAME; Count: Integer; F: CALLBACKTYPE);*)
(*$JPPDEFINEMACRO SIMPLECOMPAREINT(PROCNAME, CONSTKEYWORD, TYPENAME)
function PROCNAME(CONSTKEYWORDObj1, Obj2: TYPENAME): Integer;*)
(*$JPPDEFINEMACRO SIMPLEEQUALITYCOMPAREINT(PROCNAME, CONSTKEYWORD, TYPENAME)
function PROCNAME(CONSTKEYWORDObj1, Obj2: TYPENAME): Boolean;*)
(*$JPPDEFINEMACRO FINDINT(PROCNAME, ITRINTERFACENAME, CONSTKEYWORD, PARAMETERNAME, TYPENAME, CALLBACKTYPE)
function PROCNAME(const First: ITRINTERFACENAME; Count: Integer; CONSTKEYWORDPARAMETERNAME: TYPENAME;
  AComparator: CALLBACKTYPE): ITRINTERFACENAME;*)
(*$JPPDEFINEMACRO FINDEQINT(PROCNAME,ITRINTERFACENAME, CONSTKEYWORD, PARAMETERNAME, TYPENAME, CALLBACKTYPE)
function PROCNAME(const First: ITRINTERFACENAME; Count: Integer; CONSTKEYWORDPARAMETERNAME: TYPENAME;
  AEqualityComparator: CALLBACKTYPE): ITRINTERFACENAME;*)
(*$JPPDEFINEMACRO COUNTOBJECTINT(PROCNAME, ITRINTERFACENAME, CONSTKEYWORD, PARAMETERNAME, TYPENAME, CALLBACKTYPE)
function PROCNAME(const First: ITRINTERFACENAME; Count: Integer;
  CONSTKEYWORDPARAMETERNAME: TYPENAME; AComparator: CALLBACKTYPE): Integer;*)
(*$JPPDEFINEMACRO COUNTOBJECTEQINT(PROCNAME, ITRINTERFACENAME, CONSTKEYWORD, PARAMETERNAME, TYPENAME, CALLBACKTYPE)
function PROCNAME(const First: ITRINTERFACENAME; Count: Integer;
  CONSTKEYWORDPARAMETERNAME: TYPENAME; AEqualityComparator: CALLBACKTYPE): Integer;*)
(*$JPPDEFINEMACRO COPYINT(PROCNAME, ITRINTERFACENAME)
procedure PROCNAME(const First: ITRINTERFACENAME; Count: Integer;
  const Output: ITRINTERFACENAME);*)
(*$JPPDEFINEMACRO GENERATEINT(PROCNAME, LISTINTERFACENAME, CONSTKEYWORD, PARAMETERNAME, TYPENAME)
procedure PROCNAME(const List: LISTINTERFACENAME; Count: Integer; CONSTKEYWORDPARAMETERNAME: TYPENAME);*)
(*$JPPDEFINEMACRO FILLINT(PROCNAME, ITRINTERFACENAME, CONSTKEYWORD, PARAMETERNAME, TYPENAME)
procedure PROCNAME(const First: ITRINTERFACENAME; Count: Integer; CONSTKEYWORDPARAMETERNAME: TYPENAME);*)
(*$JPPDEFINEMACRO REVERSEINT(PROCNAME, ITRINTERFACENAME)
procedure PROCNAME(const First, Last: ITRINTERFACENAME);*)
(*$JPPDEFINEMACRO SORTINT(PROCNAME, LISTINTERFACENAME, LEFT, RIGHT, CALLBACKTYPE)
procedure PROCNAME(const AList: LISTINTERFACENAME; LEFT, RIGHT: Integer; AComparator: CALLBACKTYPE);*)